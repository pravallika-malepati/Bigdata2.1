                              
                              Assignment 1.6

1.HardCode Sum of 2 integers:
         import java.io.*;
         class Acad
         {
           public static void main(String [] args)
           {
             Integer a,b,c;
             a=4;
             b=2;
             c=a+b;
             System.out.println("Sum is"+c); 
            }
          }


2.Sum of 2 integers . I/P from user.
         import java.io.*;
           class Acad
         {
           public static void main(String [] args)
           {
             Integer a,b,c;
             Scanner sc=new Scanner(System.in);
             a=sc.nextInt();
             b=sc.nextInt();
             c=a+b;
             System.out.println("Sum is"+c); 
            }
          }



3.Sum of 2 numbers using a method:
              import java.util.Scanner;

                 public class Main {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int a=sc.nextInt();
		int b=sc.nextInt();
		sum(a,b);
	}
		public static void sum(int a,int b)
		{
			int c=a+b;
		System.out.println("First number is:"+a);
                                System.out.println("Second number is:"+b);
                                System.out.println("Sum is:"+c);
                                
		}

	}

4.A program to find the odd and even numbers between two inputs
A) 
  import java.util.Scanner;

        public class Main {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int a=sc.nextInt();
		int b=sc.nextInt();
		System.out.println("Even");
		for(int i=a;i<b;i++)
		{
			if(i%2==0)
				System.out.println(i);
			
		}
		System.out.println("Odd");
		for(int i=a;i<b;i++)
		{
			if(i%2!=0)
			  System.out.println(i);
		}
	}
	}
 
5.first 10 multiples of  a number.
 A)
    import java.util.Scanner;

           public class Multiples {
      
	public static void main(String[] args) {
                                int a=0,b;
		Scanner sc=new Scanner(System.in);
		 b=sc.nextInt();
		for(int i=1;i<11;i++)
		{
			a=b*i;
			System.out.println(a);
		}

	}

             }

6.method overloading using sum() method.
      import java.util.Scanner;

        public class Sum{
	public static void main(String []args)
	{
		int a,b,c;
		Scanner sc=new Scanner(System.in);
		 a=sc.nextInt();
		 b=sc.nextInt();
		 c=sc.nextInt();
				
		sum(a,b);
		sum(a,b,c);
	}
		public static void sum(int a,int b)
		{              int d;
			d=a+b;
			System.out.println(x);
			return;
		}
		public static void sum(int a,int b,int c)
		{                   int e;
			e=a+b+c;
			System.out.println(d);
			return ;
		}
	}

7.can we overload the method with same return type.
A) Yes,we can overload the same method  with same return type.This is possible by giving adding extra parameters to the method or by changing the parameters.

import java.util.*;
public class Overloada {
	public static void main(String[] args)
	{
	      		int a,b,c;
			Scanner sc=new Scanner(System.in);
			 a=sc.nextInt();
			 b=sc.nextInt();
			 c=sc.nextInt();
					
			  int f=sum(a,b);
			int g=sum(a,b,c);
			System.out.println(f);
			System.out.println(g);
		}
			public static int sum(int a,int b)
			{  int d;
				d=a+b;
				
				return d;
			}
			public static int sum(int a,int b,int c)
			{    int e;
				e=a+b+c;
				return e;
			}



	}


8)Sorting numbers in descending order.

A)

import java.util.*;
public class Sort {
	public static void main(String[] args)
	{    int n;
	Scanner sc=new Scanner(System.in);
	n=sc.nextInt();
		Integer a[]=new Integer[n];
		for(int i=0;i<n;i++)
		{
			a[i]=sc.nextInt();
		}
	Arrays.sort(a,Collections.reverseOrder());
	for(int i=0;i<n;i++)
	{
	System.out.println(a[i]);
	}
	
	}
}





